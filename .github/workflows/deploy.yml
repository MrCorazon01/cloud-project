name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Container Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t consolidated-test:${{ github.sha }} .

      - name: Save Docker Image as Artifact
        run: |
          docker save consolidated-test:${{ github.sha }} -o consolidated-test.tar
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: consolidated-test.tar

  push:
    name: Push to DockerHub
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          docker load < consolidated-test.tar

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          docker tag consolidated-test:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/consolidated-test:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/consolidated-test:${{ github.sha }}

  deploy:
    name: Deploy to Cloud Run
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          install_components: 'beta'

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy consolidated-test-serv \
            --image ${{ secrets.DOCKER_USERNAME }}/consolidated-test:${{ github.sha }} \
            --region ${{ secrets.GCLOUD_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_HOST=${{ secrets.DB_HOST }},DB_NAME=${{ secrets.DB_NAME }},DB_PORT=5432"
